"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const gender_input_1 = require("../../../lib/gender-input");
class GenderInputDemo extends react_1.default.Component {
    get optionalText() {
        if (!this.props.genderProps.required) {
            return react_1.default.createElement("em", null, "Optional");
        }
        return void 0;
    }
    render() {
        return (react_1.default.createElement("div", null,
            react_1.default.createElement("label", { id: "gender-label" },
                "Gender: ",
                this.optionalText),
            react_1.default.createElement("div", { id: "component-demo" },
                react_1.default.createElement(gender_input_1.GenderInput, Object.assign({}, this.props.genderProps)))));
    }
    static markup(props) {
        const lines = [`import { GenderInput } from 'react-gender-input';`, '', '<GenderInput'];
        for (const name in props) {
            if (name === 'onUpdate') {
                lines.push('\tonUpdate={(gender) => {\n\t\tthis.setState({ gender });\n\t}}');
            }
            else if (typeof props[name] === 'string') {
                lines.push(`\t${name}='${props[name]}'`);
            }
            else {
                lines.push(`\t${name}={${props[name]}}`);
            }
        }
        lines.push('/>');
        return lines.join('\n');
    }
}
exports.GenderInputDemo = GenderInputDemo;
//# sourceMappingURL=gender-input-demo.js.map