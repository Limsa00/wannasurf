"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const autobind_decorator_1 = __importDefault(require("autobind-decorator"));
const code_block_1 = require("./code-block");
const gender_input_demo_1 = require("./gender-input-demo");
const prop_toggle_1 = require("./prop-toggle");
class DemoApp extends react_1.default.Component {
    constructor(props) {
        super(props);
        this.state = {
            gender: undefined,
            required: false,
            preferNotToSay: true,
            otherReveal: 'select',
        };
    }
    get genderProps() {
        return {
            name: 'gender-input',
            value: this.state.gender,
            required: this.state.required,
            preferNotToSay: this.state.preferNotToSay,
            otherReveal: this.state.otherReveal,
            onUpdate: (gender) => {
                this.setState({
                    gender,
                });
            },
        };
    }
    setParam(name, val) {
        this.setState({ [name]: val });
    }
    render() {
        const currentValue = this.state.gender || (this.state.gender === null ? 'null' : 'undefined');
        return (react_1.default.createElement("div", { id: "demo-container" },
            react_1.default.createElement("section", { id: "demo-panel" },
                react_1.default.createElement("h2", null,
                    "Demo",
                    react_1.default.createElement("div", { className: "value" },
                        "Selected option: ",
                        react_1.default.createElement("span", { className: "code" }, currentValue))),
                react_1.default.createElement(gender_input_demo_1.GenderInputDemo, { genderProps: this.genderProps })),
            react_1.default.createElement("section", { id: "markup-panel" },
                react_1.default.createElement("h2", null, "Markup"),
                react_1.default.createElement(code_block_1.CodeBlock, null, gender_input_demo_1.GenderInputDemo.markup(this.genderProps))),
            react_1.default.createElement("section", { id: "parameters" },
                react_1.default.createElement("h2", null, "Parameters"),
                react_1.default.createElement(prop_toggle_1.PropToggle, { name: "required", current: this.state.required, onClick: this.setParam }),
                react_1.default.createElement(prop_toggle_1.PropToggle, { name: "preferNotToSay", current: this.state.preferNotToSay, onClick: this.setParam }),
                react_1.default.createElement(prop_toggle_1.PropToggle, { name: "otherReveal", current: this.state.otherReveal, options: ['select', false], onClick: this.setParam }))));
    }
}
__decorate([
    autobind_decorator_1.default
], DemoApp.prototype, "setParam", null);
exports.DemoApp = DemoApp;
//# sourceMappingURL=demo-app.js.map